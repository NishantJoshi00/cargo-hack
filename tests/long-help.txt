cargo-hack 0.3.11

A tool to work around some limitations on cargo.

USAGE:
    cargo hack [OPTIONS] [SUBCOMMAND]

Use -h for short descriptions and --help for more details.

OPTIONS:
    -p, --package <SPEC>...
            Package(s) to check.

        --all
            Alias for --workspace.

        --workspace
            Perform command for all packages in the workspace.

        --exclude <SPEC>...
            Exclude packages from the check.

        --manifest-path <PATH>
            Path to Cargo.toml.

        --features <FEATURES>
            Space-separated list of features to activate.

        --each-feature
            Perform for each feature which includes --no-default-features flag and default features of the package.

        --feature-powerset
            Perform for the feature powerset which includes --no-default-features flag and default features of the package.

        --optional-deps
            Use optional dependencies as features.

            This flag can only be used with either --each-feature flag or --feature-powerset flag.

        --skip <FEATURES>
            Space-separated list of features to skip.

            To skip run of default feature, using value `--skip default`.

            This flag can only be used with either --each-feature flag or --feature-powerset flag.

        --skip-no-default-features
            Skip run of just --no-default-features flag.

            This flag can only be used with either --each-feature flag or --feature-powerset flag.

        --no-dev-deps
            Perform without dev-dependencies.

            This flag removes dev-dependencies from real `Cargo.toml` while cargo-hack is running and restores it when finished.

        --remove-dev-deps
            Equivalent to --no-dev-deps flag except for does not restore the original `Cargo.toml` after performed.

        --ignore-private
            Skip to perform on `publish = false` packages.

        --ignore-unknown-features
            Skip passing --features flag to `cargo` if that feature does not exist in the package.

        --clean-per-run
            Remove artifacts for that package before running the command.

            If used this flag with --workspace, --each-feature, or --feature-powerset, artifacts will be removed before each run.

            Note that dependencies artifacts will be preserved.

    -v, --verbose
            Use verbose output.

            This flag will be propagated to cargo.

        --color <WHEN>
            Coloring: auto, always, never.

            This flag will be propagated to cargo.

    -h, --help
            Prints help information.

    -V, --version
            Prints version information.

Some common cargo commands are (see all commands with --list):
        build       Compile the current package
        check       Analyze the current package and report errors, but don't build object files
        run         Run a binary or example of the local package
        test        Run the tests

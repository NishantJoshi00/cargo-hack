name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - staging
  schedule:
    - cron: "0 1 * * *"

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: 1

defaults:
  run:
    shell: bash

jobs:
  test:
    strategy:
      matrix:
        include:
          - rust: 1.36
          - rust: 1.39
          - rust: 1.41
          - rust: stable
          - rust: beta
          - rust: nightly
          - rust: nightly
            os: macos-latest
          - rust: nightly
            os: windows-latest
          - rust: nightly
            target: x86_64-unknown-linux-musl
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/github-actions/install-rust@main
        with:
          toolchain: ${{ matrix.rust }}
      - if: startsWith(matrix.rust, 'nightly') && matrix.target == ''
        run: cargo install cargo-hack
      - if: matrix.target != ''
        run: cargo install cross
      - if: matrix.target != ''
        run: cross test --target ${{ matrix.target }}
      - if: matrix.target == ''
        run: cargo test --all
      - if: startsWith(matrix.rust, 'nightly') && matrix.target == ''
        run: bash scripts/check-minimal-versions.sh

  build:
    strategy:
      matrix:
        range:
          # This is the minimum supported Rust version of this crate.
          # When updating this, the reminder to update the minimum supported
          # Rust version in README.md and clippy.toml.
          - 1.36..1.40
          - 1.41..1.45
          - 1.46..
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo install cargo-hack
      - run: cargo hack build --all --ignore-private --no-dev-deps --version-range ${{ matrix.range }}

  run:
    strategy:
      matrix:
        rust:
          # cargo-hack is usually runnable with Cargo versions older than the Rust version required for installation.
          # When updating this, the reminder to update the minimum supported Rust version in README.md.
          - 1.26
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/github-actions/install-rust@main
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo +stable install --path .
      - run: cargo hack check --manifest-path tests/fixtures/run/real/Cargo.toml
      - run: cargo hack check --manifest-path tests/fixtures/run/virtual/Cargo.toml
      - run: git diff --exit-code
      - run: cargo hack --remove-dev-deps --manifest-path tests/fixtures/run/real/Cargo.toml

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/github-actions/install-rust@main
        with:
          component: clippy
      - run: cargo clippy --all --all-features --all-targets

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/github-actions/install-rust@main
        with:
          component: rustfmt
      - run: cargo fmt --all -- --check

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: shellcheck **/*.sh

  # This job doesn't actually test anything, but they're used to tell bors the
  # build completed, as there is no practical way to detect when a workflow is
  # successful listening to webhooks only.
  #
  # ALL THE PREVIOUS JOBS NEEDS TO BE ADDED TO THE `needs` SECTION OF THIS JOB!

  ci-success:
    name: ci
    if: github.event_name == 'push' && success()
    needs:
      - test
      - build
      - run
      - clippy
      - rustfmt
      - shellcheck
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a success
        run: exit 0
